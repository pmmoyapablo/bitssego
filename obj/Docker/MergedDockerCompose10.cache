name: dockercompose12778088238149389877
services:
  api_access:
    build:
      context: C:\Users\PabloMoya\source\repos\bits_slnsgo
      dockerfile: src/Backend/Api_Access/Dockerfile
    depends_on:
      sqldata:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    image: apiaccess
    networks:
      my-network: null
    ports:
    - mode: ingress
      target: 80
      published: "5010"
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Users\PabloMoya\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\PabloMoya\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
  api_clients:
    build:
      context: C:\Users\PabloMoya\source\repos\bits_slnsgo
      dockerfile: src/Backend/Api_Clients/Dockerfile
    depends_on:
      sqldata:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    image: apiclients
    networks:
      my-network: null
    ports:
    - mode: ingress
      target: 80
      published: "5020"
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Users\PabloMoya\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\PabloMoya\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
  api_employees:
    build:
      context: C:\Users\PabloMoya\source\repos\bits_slnsgo
      dockerfile: src/Backend/Api_Employees/Dockerfile
    depends_on:
      sqldata:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    image: apiemployees
    networks:
      my-network: null
    ports:
    - mode: ingress
      target: 80
      published: "5030"
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Users\PabloMoya\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\PabloMoya\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
  api_gateway:
    build:
      context: C:\Users\PabloMoya\source\repos\bits_slnsgo
      dockerfile: src/Backend/GatewayApi/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    image: apigateway
    networks:
      my-network: null
    ports:
    - mode: ingress
      target: 80
      published: "5000"
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Users\PabloMoya\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\PabloMoya\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
  api_products:
    build:
      context: C:\Users\PabloMoya\source\repos\bits_slnsgo
      dockerfile: src/Backend/Api_Products/Dockerfile
    depends_on:
      sqldata:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    image: apiproducts
    networks:
      my-network: null
    ports:
    - mode: ingress
      target: 80
      published: "5040"
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Users\PabloMoya\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\PabloMoya\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
  api_worksorders:
    build:
      context: C:\Users\PabloMoya\source\repos\bits_slnsgo
      dockerfile: src/Backend/Api_WorksOrders/Dockerfile
    depends_on:
      sqldata:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    image: apiworksorders
    networks:
      my-network: null
    ports:
    - mode: ingress
      target: 80
      published: "5050"
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Users\PabloMoya\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\PabloMoya\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
  sisgtfhka:
    build:
      context: C:\Users\PabloMoya\source\repos\bits_slnsgo
      dockerfile: src/Frontend/Sgotfhka/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    image: sisgtfhka
    networks:
      my-network: null
    ports:
    - mode: ingress
      target: 80
      published: "8080"
      protocol: tcp
    volumes:
    - type: volume
      source: bits-sqlite
      target: /opt/datasession
      volume: {}
    - type: bind
      source: C:\Users\PabloMoya\source\repos\bits_slnsgo\src\Frontend\foo_db
      target: /opt/datasession/foo_db
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\PabloMoya\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
  sqldata:
    build:
      context: C:\Users\PabloMoya\source\repos\bits_slnsgo
      dockerfile: Database/Dockerfile
    container_name: sqldata
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: Pass@word
    image: sqldata
    networks:
      my-network: null
    ports:
    - mode: ingress
      target: 1433
      published: "5433"
      protocol: tcp
    restart: always
    volumes:
    - type: volume
      source: bits-sqldata
      target: /var/opt/mssql
      volume: {}
    - type: bind
      source: C:\Users\PabloMoya\source\repos\bits_slnsgo\Database\templatedata
      target: /var/opt/mssql/data
      bind:
        create_host_path: true
networks:
  my-network:
    name: dockercompose12778088238149389877_my-network
    driver: bridge
volumes:
  bits-sqldata:
    name: dockercompose12778088238149389877_bits-sqldata
  bits-sqlite:
    name: dockercompose12778088238149389877_bits-sqlite