@model Sisgtfhka.Extensions.PaginatedList<Sisgtfhka.Models.AlienationModel>


    @{
        ViewData["Title"] = "Enajenaciones";
        int RolId = int.Parse(ViewData["RolId"].ToString());
    }

    <h2>Enajenaciones</h2>

    <p>
        <a asp-action="Create">Crear Nueva Enajenación</a>
    </p>


    <form asp-action="Index" method="get" class="form-inline">
        <div class="form-group">
            <p>
                Dato: <input type="text" class="form-control" placeholder="buscar.." name="SearchString" value="@ViewData["CurrentFilter"]" />
                <button type="submit" class="btn btn-info" data-toggle="popoverTp" data-trigger="focus" data-content="Buscar"><i class="fas fa-search"></i></button> |
                <a asp-action="Index">Refrescar</a>
            </p>
        </div>
    </form>


    <table class="table">
        <thead>
            <tr>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">@Html.DisplayNameFor(AlienationModel => AlienationModel.FirstOrDefault().Serial)</a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">@Html.DisplayNameFor(AlienationModel => AlienationModel.FirstOrDefault().DistributorId)</a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">@Html.DisplayNameFor(AlienationModel => AlienationModel.FirstOrDefault().FinalClientId)</a>
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Serial)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Distributor.description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FinalClient.Description)
                </td> 
                <td>
                    @if (item.Status == "PROCESADO")
                    {
                    @Html.ActionLink("Editar", "Edit", new { id = item.Id, searchType = "" }) 
                    }
                    |
                    @Html.ActionLink("Detalles", "Details", new { id = item.Id }) |
                    @if (RolId <= 4 || item.Status == "PROCESADO")
                    {
                    @Html.ActionLink("Borrar", "Delete", new { id = item.Id })
                    }
                </td>
    
                </tr>
            }
        </tbody>
    </table>

    @{
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    }
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex - 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @prevDisabled">
        Anterior
    </a>
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex + 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-primary @nextDisabled">
        Siguiente
    </a>
