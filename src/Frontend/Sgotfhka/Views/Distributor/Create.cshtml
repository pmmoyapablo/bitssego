@model Sisgtfhka.Models.DistributorModel
@inject Microsoft.Extensions.Options.IOptions<AppSettings> Settings

@{
    ViewData["Title"] = "Nuevo Distribuidor";

    string uriSA = Settings.Value.UrlSA_Distributors;
}

<h2>Nuevo Distribuidor</h2>

<h4>Coloque el RIF de Distribuidor a importar</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="rif" class="control-label"></label>
                <input asp-for="rif" class="form-control" />
                <span asp-validation-for="rif" class="text-danger"></span>
                <input type="hidden" id="username" value="@ViewBag.Username" />
                <input type="hidden" id="uriSA" value="@uriSA" />
            </div>
            <div class="form-group">
                <input type="submit" value="Importar" class="btn btn-primary" onClick="javascript:abrirPopup( document.getElementById('uriSA').value + '?username='+ document.getElementById('username').value + '&rif=' + document.getElementById('rif').value, 500, 400)" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Regresar</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        function abrirPopup(url, w, h) {
            var newW = w + 100;
            var newH = h + 100;
            var left = (screen.width - newW) / 2;
            var top = (screen.height - newH) / 2;
            var newwindow = window.open(url, 'name', 'width=' + newW + ',height=' + newH + ',left=' + left + ',top=' + top);
            newwindow.resizeTo(newW, newH);

            //posiciona o popup no centro da tela
            newwindow.moveTo(left, top);
            newwindow.focus();
            return false;
        }
    </script>
}
