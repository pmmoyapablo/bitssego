@model Sisgtfhka.Extensions.PaginatedList<Sisgtfhka.Models.TechnicianModel>

@{
    ViewData["Title"] = "Técnicos del Distribuidor";
    int RolId = int.Parse(ViewData["RolId"].ToString());
    int DistributorId = int.Parse(ViewData["DistributorId"].ToString());
}

<h2>Técnicos de Centros de Servicios del Distribuidor</h2>

<form asp-action="ViewTechnicals" method="get">
    <div class="form-actions no-color">
        <p>
            Dato: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Buscar" class="btn btn-primary" /> |
            <a asp-action="ViewTechnicals">Refrescar</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">@Html.DisplayNameFor(model => model.FirstOrDefault().rif)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">@Html.DisplayNameFor(model => model.FirstOrDefault().description)</a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().phone)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().enable)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.rif)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.phone)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.enable)
                </td>
                <td>
                    @Html.ActionLink("Detalles", "Details", "Technician", new { id = item.id })
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Anterior
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Siguiente
</a>

<div>
    <p>@Html.ActionLink("Regresar", "Details", new { id = DistributorId })</p>
</div>
