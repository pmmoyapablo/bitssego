@model Sisgtfhka.Extensions.PaginatedList<Sisgtfhka.Models.EmployeeModel>

@{
    ViewData["Title"] = "Empleados a Cargo";
   // int RolId = int.Parse(ViewData["RolId"].ToString());

}

<h2>Empleados a Cargo</h2>

<form asp-action="ViewEmployees" method="get" class="form-inline">
    <div class="form-actions no-color">
        <p>
            Dato: <input type="text" class="form-control" placeholder="buscar.." name="SearchString" value="@ViewData["CurrentFilter"]" />            
            <input type="hidden" name="supervitorId" value="@ViewData["Employees"]" />
            <button type="submit" class="btn btn-info" data-toggle="popoverTp" data-trigger="focus" data-content="Buscar"><i class="fas fa-search"></i></button> |
            <a asp-action="ViewEmployees" asp-route-supervitorId="@ViewData["Employees"]">Refrescar</a>
        </p>

    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">@Html.DisplayNameFor(model => model.FirstOrDefault().rif)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">@Html.DisplayNameFor(model => model.FirstOrDefault().description)</a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().departamentId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().chargueId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().phone)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Enable)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
         {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.rif)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Departament.description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Chargue.description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.phone)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Enable)
            </td>
            <td>
                @Html.ActionLink("Detalles", "Details", new { id = item.id })
            </td>
        </tr>
         }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Anterior
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Siguiente
</a>
<br>
<br>
<div>
    <a asp-action="Index">Regresar</a>
</div>
