@model Sisgtfhka.Extensions.PaginatedList<Sisgtfhka.Models.FiscalOperationModel>
@{
    ViewData["Title"] = "Operaciones Fiscales";
    int RolId = int.Parse(ViewData["RolId"].ToString());
}

<h2>Historial de Operaciones Fiscales</h2>

@if (RolId == 10 || RolId <= 7)
{
    <p>
        <a asp-action="CodeGenerator">Generar Código de Operación</a>
    </p>
}

<form asp-action="Index" method="get" class="form-inline">
    <div class="form-group">
        <p>
            Dato: <input type="text" class="form-control" placeholder="buscar.." name="SearchString" value="@ViewData["CurrentFilter"]" />
            <button type="submit" class="btn btn-info" data-toggle="popoverTp" data-trigger="focus" data-content="Buscar"><i class="fas fa-search"></i></button> |
            <a asp-action="Index">Refrescar</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">@Html.DisplayNameFor(FiscalOperationModel => FiscalOperationModel.FirstOrDefault().serial)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">@Html.DisplayNameFor(FiscalOperationModel => FiscalOperationModel.FirstOrDefault().technicianId)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">@Html.DisplayNameFor(FiscalOperationModel => FiscalOperationModel.FirstOrDefault().finalClientId)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">@Html.DisplayNameFor(FiscalOperationModel => FiscalOperationModel.FirstOrDefault().distributorId)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">@Html.DisplayNameFor(FiscalOperationModel => FiscalOperationModel.FirstOrDefault().fiscalMode)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">@Html.DisplayNameFor(FiscalOperationModel => FiscalOperationModel.FirstOrDefault().fiscalOperation)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">@Html.DisplayNameFor(FiscalOperationModel => FiscalOperationModel.FirstOrDefault().fiscalResult)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">@Html.DisplayNameFor(FiscalOperationModel => FiscalOperationModel.FirstOrDefault().Creation_Date)</a>
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.serial)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Technician.rif)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FinalClient.Rif)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Distributor.rif)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.fiscalMode)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.fiscalOperation)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.fiscalResult)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Creation_Date)
                </td>
                <td>
                    @Html.ActionLink("Detalles", "Details", new { id = item.id }) |
                    @if (RolId <= 4)
                    {
                    @Html.ActionLink("Borrar", "Delete", new { id = item.id })
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Anterior
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-primary @nextDisabled">
    Siguiente
</a>


