@model Sisgtfhka.Models.RolModel

@{
    ViewData["Title"] = "Editar Rol";
}

<h2>Editar Rol</h2>

<h4>Datos del Rol a editar.</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="AccessId" class="control-label"></label>
                @Html.DropDownListFor(model => model.AccessId, (IEnumerable<SelectListItem>)ViewBag.Opciones, "", htmlAttributes: new { @class = "form-control" })
                <span asp-validation-for="AccessId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ProfileId" class="control-label"></label>
                @Html.DropDownListFor(model => model.ProfileId, (IEnumerable<SelectListItem>)ViewBag.Opciones2, "", htmlAttributes: new { @class = "form-control" })
                <span asp-validation-for="ProfileId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Guardar" class="btn btn-success" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Regresar</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
