@model Sisgtfhka.Extensions.PaginatedList<Sisgtfhka.Models.WorkshopModel>


@{
    ViewData["Title"] = "Ordenes de Taller";
    int RolId = int.Parse(ViewData["RolId"].ToString());

}

<h2>Ordenes de Taller</h2>

@if (RolId <= 3 || RolId == 14 || ViewData["DistributorActive"].Equals(true))
{
    <p>
        <a asp-action="Create">Crear Nueva Orden</a>
    </p>
}

<form asp-action="Index" method="get" class="form-inline">
    <div class="form-group">
        <p>
            Dato: <input type="text" class="form-control" placeholder="buscar.." name="SearchString" value="@ViewData["CurrentFilter"]" />
            <button type="submit" class="btn btn-info" data-toggle="popoverTp" data-trigger="focus" data-content="Buscar"><i class="fas fa-search"></i></button> |
            <a asp-action="Index">Refrescar</a>
        </p>
    </div>
</form>


<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">@Html.DisplayNameFor(workshopModel => workshopModel.FirstOrDefault().NumerOrder)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">@Html.DisplayNameFor(workshopModel => workshopModel.FirstOrDefault().Serial)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">@Html.DisplayNameFor(workshopModel => workshopModel.FirstOrDefault().DistributorId)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">@Html.DisplayNameFor(workshopModel => workshopModel.FirstOrDefault().StateOrderId)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">@Html.DisplayNameFor(workshopModel => workshopModel.FirstOrDefault().Contact)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">@Html.DisplayNameFor(AlienationModel => AlienationModel.FirstOrDefault().creation_date)</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @if (RolId <= 8)
                    {
                        <a asp-action="Binnacle" asp-route-id="@item.Id">@Html.DisplayFor(modelItem => item.NumerOrder)</a>
                    }
                    else
                    {
                        @Html.DisplayFor(modelItem => item.NumerOrder)
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Serial)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Distributor.rif)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.statesOrder.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Contact)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.creation_date)
                </td>
                <td>
                    @if ((RolId == 1))
                    {
                        @if (item.StateOrderId != 12)
                        {
                            @Html.ActionLink("Editar", "Edit", new { id = item.Id }) @Html.Raw(" |")
                        }
                    }

                    @Html.ActionLink("Detalles", "Details", new { id = item.Id }) |
                    @if (RolId <= 3)
                    {
                        @if (item.StateOrderId != 12)
                        {
                            @Html.ActionLink("Anular", "Cancel", new { id = item.Id }) @Html.Raw(" |")
                        }
                    }
                    @if (RolId == 1)
                    {
                        @Html.ActionLink("Borrar", "Delete", new { id = item.Id }) @Html.Raw(" |")
                    }
                    @Html.ActionLink("PDF", "GetPdf", new { id = item.Id })
                </td>

            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Anterior
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-primary @nextDisabled">
    Siguiente
</a>